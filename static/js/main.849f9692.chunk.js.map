{"version":3,"sources":["components/TodoList/TodoList.tsx","components/API/api.ts","components/CurrentUser/CurrentUser.tsx","App.tsx","index.tsx"],"names":["TodoList","SelectFilter","listOfTodos","callbackForUserSelect","selectedUserId","useState","currentFilter","setCurrentFilter","all","filterBySelect","setFilterBySelect","filtered","setFiltered","filtrato","option","result","list","completed","filter","el","active","sorter","title","toLowerCase","includes","useEffect","className","type","onChange","event","target","value","Number","map","singleTodo","classNames","readOnly","checked","userId","onClick","id","request","url","fetch","then","res","json","getTodos","a","getSingleUser","CurrentUser","clearUser","currentUser","setCurrentUser","singleUser","name","email","phone","App","setSelectedUserId","currentTodos","setCurrentTodos","todosGetter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.849f9692.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport './TodoList.scss';\n\ninterface Props {\n  listOfTodos : Todo[],\n  selectedUserId: number,\n  callbackForUserSelect: (id : number) => void;\n}\n\nexport const TodoList: React.FC<Props> = (\n  { listOfTodos, callbackForUserSelect, selectedUserId },\n) => {\n  enum SelectFilter {\n    active,\n    completed,\n    all,\n  }\n\n  const [currentFilter, setCurrentFilter] = useState('');\n  const [\n    filterBySelect, setFilterBySelect,\n  ] = useState<SelectFilter>(SelectFilter.all);\n  const [filtered, setFiltered] = useState<Todo[]>([]);\n\n  function sorter(list : Todo[]) {\n    switch (filterBySelect) {\n      case SelectFilter.completed: {\n        return list.filter(el => el.completed === true);\n      }\n\n      case SelectFilter.active: {\n        return list.filter(el => el.completed === false);\n      }\n\n      default: {\n        return list;\n      }\n    }\n  }\n\n  const filtrato = (option : string) => {\n    const sorted = listOfTodos.filter(\n      el => el.title.toLowerCase().includes(option.toLowerCase()),\n    );\n    const result = sorter(sorted);\n\n    setFiltered(result);\n  };\n\n  useEffect(() => {\n    filtrato(currentFilter);\n  }, [filterBySelect, currentFilter, listOfTodos, selectedUserId]);\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Filter todos:</h2>\n      <label>\n        <p>filter</p>\n        <input\n          type=\"text\"\n          onChange={(event) => {\n            setCurrentFilter(event.target.value);\n          }}\n        />\n      </label>\n      <label>\n        <p>\n          Status\n        </p>\n        <select\n          onChange={(event) => {\n            setFilterBySelect(Number(event.target.value));\n          }}\n        >\n          <option value={SelectFilter.all}>\n            all\n          </option>\n          <option value={SelectFilter.completed}>\n            completed\n          </option>\n          <option value={SelectFilter.active}>\n            active\n          </option>\n        </select>\n      </label>\n\n      <h2>Todos:</h2>\n\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {filtered.map(singleTodo => (\n            (\n              <li\n                key={singleTodo.id}\n                className={\n                  classNames(\n                    'TodoList__item',\n                    { 'TodoList__item--checked': singleTodo.completed },\n                    { 'TodoList__item--unchecked': !singleTodo.completed },\n                  )\n                }\n              >\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    readOnly\n                    checked={singleTodo.completed}\n                  />\n                  <p>{singleTodo.title}</p>\n                </label>\n                <button\n                  className={classNames(\n                    'TodoList__user-button',\n                    'button',\n                    {\n                      // eslint-disable-next-line max-len\n                      'TodoList__user-button--selected': singleTodo.userId === selectedUserId,\n                    },\n                  )}\n                  type=\"button\"\n                  onClick={() => {\n                    callbackForUserSelect(singleTodo.userId);\n                  }}\n                >\n                  {`User ${singleTodo.userId}`}\n                </button>\n              </li>\n            )\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api';\n\nexport function request(url: string) {\n  return fetch(`${BASE_URL}${url}`)\n    .then(res => res.json());\n}\n\nexport async function getTodos() {\n  const result = await (request('/todos'));\n\n  return result;\n}\n\nexport async function getUsers() {\n  const result = await (request('/users'));\n\n  return result;\n}\n\nexport async function getSingleUser(id:number) {\n  const result = await (request(`/users/${id}`));\n\n  return result;\n}\n","import React, { useEffect, useState } from 'react';\nimport { getSingleUser } from '../API/api';\nimport './CurrentUser.scss';\n\ninterface Props {\n  userId: number;\n  clearUser: (arg0 : number) => void;\n}\n\nexport const CurrentUser: React.FC<Props> = ({ userId, clearUser }) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  async function singleUser(id : number) {\n    const result = await getSingleUser(id);\n\n    setCurrentUser(result);\n  }\n\n  useEffect(() => {\n    singleUser(userId);\n  }, [userId]);\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\">\n        <span>\n          {`Selected user: ${currentUser?.id}`}\n        </span>\n      </h2>\n\n      <h3 className=\"CurrentUser__name\">{currentUser?.name}</h3>\n      <p className=\"CurrentUser__email\">{currentUser?.email}</p>\n      <p className=\"CurrentUser__phone\">{currentUser?.phone}</p>\n      <button\n        type=\"button\"\n        onClick={() => clearUser(0)}\n      >\n        Clear\n      </button>\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './components/API/api';\n\nconst App: React.FC = () => {\n  const [\n    selectedUserId,\n    setSelectedUserId,\n  ] = useState(0);\n\n  const [currentTodos, setCurrentTodos] = useState<Todo[]>([]);\n\n  async function todosGetter() {\n    const result = await getTodos();\n\n    setCurrentTodos(result);\n  }\n\n  useEffect(() => {\n    todosGetter();\n  }, [selectedUserId]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          listOfTodos={currentTodos}\n          selectedUserId={selectedUserId}\n          callbackForUserSelect={setSelectedUserId}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <CurrentUser\n              userId={selectedUserId}\n              clearUser={setSelectedUserId}\n            />\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}